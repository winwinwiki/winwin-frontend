language: node_js
node_js:
  - "11" #version of node js
cache:
  directories:
    - node_modules
script:
  - echo "Starting build on $TRAVIS_BRANCH branch"
  - |
   if [ "$TRAVIS_BRANCH" == "dev" ]; then 
     export BUILD_CMD="build-dev"     
    fi
   if [ "$TRAVIS_BRANCH" == "staging" ]; then
     export BUILD_CMD="build-staging"     
    fi
   if [ "$TRAVIS_BRANCH" == "master" ]; then
     export BUILD_CMD="build"     
    fi
  - echo "Build command = $BUILD_CMD"
  - unset CI #To avoid build failure due to warnings
  - npm install && npm run "$BUILD_CMD"
before_install:
  # set up awscli packages
  - pip install --user awscli
  #- export AWS_DEFAULT_REGION=[secure]
  #- export AWS_ACCESS_KEY_ID=[secure]
  #- export AWS_SECRET_ACCESS_KEY=[secure]
  #- aws configure
install: true
before_deploy: 
  - echo "Deployment in progress"

-: &s3_deploy
    provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
      #secure: "Rug6OasQDa/+nCGTgTcmktSE3XQYm1m7hx1Y4T5gozOqbXqtRdC2WySKYJboPw420RdhnDaIh5ctjLcKXGfvDIWhFiMnAsGS5ptwLfP/wJae0JgANq+DbXxXjEMctD1T/uWBpDJKiI1HdnjLRIygrX7L8nvWMzmdPMIn1b5xQ8whG76U/rKxtzrATbeNjYyQ/623LEHr4U0umQT2dN7d4YTaDPlJ5gQgQR5WX29CD9xIHC+X/p55wYn/p605tft8Y246acLoAFYK1KmcWOAJLxMlmV6Sq0Pv3QEsyOYTVtiHpLdfveYjxQORQihny4K3zlX5zBoNVbGasSFjNyhUW2NHucFJ6NrclC8YEms+0LCj8jYoR0sWjUuSSv2gyg9C2Nhv8iVhILN8GdZmG8CaTv6y2iPY0dbEsOPtb3k+tEqIYD5+fi8+mz920rUQ4CsgdyZoPLPoc968zT0WjnRKvGJNx96qMTXOFwodOQ/prepOHKg6gBbmTPLVYggJowj/coBGTThbxVpQ3/nJho9eNOk0LUc5B07iLigiWlI+DZVqMl+zQG81lylo+ldDSuwgXrmgamgoHFDxuytjxTOh8gowvrz8wd/WBcNpOpWP43YWwi04rIua7RDfVoKHEGGPjVx9hXkTTZwoY/QBjYxxX97Y9sE1qAEJpkmtLLMTGpM="
    local_dir: build #Upload only this directory
    skip_cleanup: true #Skip cleaning up the build folder before deploy/upload
    region: "us-east-2"
    wait-until-deployed: true

deploy:
  # make dev build and deploy in dev bucket
  - <<: *s3_deploy
    on:
      branch: dev
    bucket: "winwin-frontend-bucket"
    region: "us-east-2"
    
 # make stag build and deploy in stag bucket
  - <<: *s3_deploy
    on:
      branch: staging
    bucket: "winwin-frontend-bucket-stag"
    region: "us-west-2"
  
  # make prod build and deploy in prod bucket
  - <<: *s3_deploy
    on:
      branch: master
    bucket: "winwin-frontend-bucket-prod"
    region: "us-west-2"
    
after_deploy: 
  - echo "Deployment is complete"
  # Allow 'awscli' to make requests to CloudFront.
  - aws configure set preview.cloudfront true
  # Invalidate every object in the targeted distribution.
  # The below command creates a invalidation on cloud front which clears all the caches on server to reflect fresh changes
  - |
   if [ "$TRAVIS_BRANCH" == "dev" ]; then 
     aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DIST_ID_DEV --paths "/*"
    fi
   if [ "$TRAVIS_BRANCH" == "staging" ]; then
     aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DIST_ID_STAG --paths "/*"
     fi
   if [ "$TRAVIS_BRANCH" == "master" ]; then
     aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DIST_ID_PROD --paths "/*"
     fi

notifications:
  slack:
    secure: TBVzvRAw+vzEdAhCbW9ke9XsfE3nci6TZzNpeWoKRcT5H0503MuettqdEXQVH0wMz/j9wyH9dMVrFOB7d5cqvAwePwn+51h80L3wbybySza+ZTWkS9CMrCLgHSW/xM3F63ibXwpFQDpgKEFED2RED9QpHvSXdOjDKpRDpEjx7ci+DemBfAsBjx01KUjwLj2Whf7CNWLac+9jyHet0sQcWvsm0dnjS4kvoZLUs0Jjb4neeuzsY1yFs6JmHAEz8TUXJUXZBIpV+hLXLNqdjVLCaORp5EnpTKpKXH/OSraoYgcVSE9NKcJfqwrLO9f8oFWyAQ7DYllRjfZgUTHoGuYBRDUsgwZVqQr6RFStHASwZiHyz6j+rW7Fk0C6PLgsBSuLmexn7R6tFnFHIypYFQkrlXcT+GoardHZMSI35m8Ht42IDVXtzxVBgkwRueUfbNFu7T4Fa1TqimS+fArwtFPBe2XuSKUb4rjMJnbQj38KcTV6xtqZPRJVrcWyEp/vGCQEkCDBCrTHWup1ZeJ0okHSW0jkkYLbua0UjmBr8nCBo9PFecxFOSVF10IsN63kTyiGG/iOhcorMQh6OaDTVKCCk9HkEfodQvbk/DgRgqkHSGDuYEOrnD3bKI7dVhPqcDv2UdTxyezr+AOLEpDvLcOlux10EaGwlM2XN5F4i5gp6Lg=
